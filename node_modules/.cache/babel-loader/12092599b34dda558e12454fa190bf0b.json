{"ast":null,"code":"var _jsxFileName = \"/Users/jharit/Desktop/facedetection/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Signin from './Components/Signin/Signin';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '80b7541aa0c044e1b01478d3781a58c0'\n});\nconst particlesOptions = {\n  polygon: {\n    enable: true,\n    type: 'inside',\n    move: {\n      radius: 10\n    },\n    density: {\n      enable: true,\n      value_area: 800\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSingnedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSingnedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSingnedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: {\n        particlesOptions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSingnedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jharit/Desktop/facedetection/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","Register","FaceRecognition","Signin","app","App","apiKey","particlesOptions","polygon","enable","type","move","radius","density","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSingnedIn","render"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Register from './Components/Register/Register';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Signin from './Components/Signin/Signin';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '80b7541aa0c044e1b01478d3781a58c0'\n });\n\nconst particlesOptions = {\n  polygon: {\n      enable: true,\n      type: 'inside',\n      move: {\n          radius: 10\n      },\n      density: {\n        enable: true,\n        value_area: 800\n      }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super() ;\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSingnedIn : false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries : 0,\n        joined : ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n        name: data.name,\n        email: data.email,\n        entries : data.entries,\n        joined : data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width ,\n      topRow: clarifaiFace.top_row * height ,\n      rightCol : width - (clarifaiFace.right_col * width),\n      bottomRow : height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box : box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl : this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route ==='signout') {\n      this.setState({isSingnedIn:false})\n    } else if (route ==='home'){\n      this.setState({isSingnedIn:true})\n    }\n    this.setState({route: route })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n                params={{ particlesOptions }} \n              />\n              <Navigation isSignedIn={this.state.isSingnedIn} onRouteChange={this.onRouteChange} />\n              { this.state.route === 'home'\n                ?<div> \n                  <Logo />\n                  <Rank />\n                  <ImageLinkForm  \n                    onInputChange = {this.onInputChange} \n                    onButtonSubmit ={this.onButtonSubmit}\n                  />\n                  <FaceRecognition box={this.state.box}imageUrl = {this.state.imageUrl}/>\n                </div>\n              :(\n                this.state.route === 'signin' \n                  ? <Signin onRouteChange={this.onRouteChange}/>\n                  : <Register onRouteChange={this.onRouteChange}/>\n                )\n              }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}